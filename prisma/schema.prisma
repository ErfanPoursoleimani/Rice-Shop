// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELED
}

enum Role {
  ADMIN
  USER
}

model User {
  id          Int     @id @default(autoincrement())
  phoneNumber Int  @unique
  postalCode  String  @default("postalCode")
  address     String  @default("address")
  firstName   String  @default("firstName")
  lastName    String  @default("lastName")
  cart        Cart?
  cartId      Int?    @unique
  order       Order[]
  orderId     Int?     @unique
  role        Role    @default(USER)
}

model Cart {
  id       Int           @id @default(autoincrement())
  products CartProduct[]
  user     User          @relation(fields: [userId], references: [id])
  userId   Int           @unique
}

model Product {
  id          Int           @id @default(autoincrement())
  label       String        @unique
  price       Int
  description String        @db.Text
  quantity    Int
  carts       CartProduct[]
  images      Image[]
}

model CartProduct {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int     @unique
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
  quantity  Int
}

model Order {
  id     Int         @id @default(autoincrement())
  user   User        @relation(fields: [userId], references: [id])
  userId Int         @unique
  status OrderStatus @default(PENDING)
}

model Image {
  id        Int     @id @default(autoincrement())
  label     String
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
}
