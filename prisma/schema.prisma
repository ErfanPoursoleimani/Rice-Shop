// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  IN_PROGRESS
  SENT
  CANCELLED
}

enum Role {
  ADMIN
  USER
}

model User {
  id            Int            @id @default(autoincrement())
  phoneNumber   String?        @unique
  email         String?        @unique
  postalCode    String         @default("")
  address       String         @default("")
  firstName     String         @default("")
  lastName      String         @default("")
  nationalCode  String         @default("")
  cart          Cart?
  cartId        Int?           @unique
  order         Order[]
  orderId       Int?           @unique
  role          Role           @default(USER)
  reviews       Review[]
  addresses     Address[]
  notifications Notification[]
}

model Address {
  id     Int    @id @default(autoincrement())
  text   String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Notification {
  id     Int    @id @default(autoincrement())
  text   String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Cart {
  id       Int           @id @default(autoincrement())
  products CartProduct[]
  user     User          @relation(fields: [userId], references: [id])
  userId   Int           @unique
  order    Order?
  orderId  Int?          @unique
}

model Product {
  id              Int           @id @default(autoincrement())
  label           String        @unique
  originalPriceFa Float         @default(1200)
  priceFa         Float         @default(1200)
  description     String        @db.Text
  stock           Int           @default(10)
  inStock         Boolean       @default(true)
  carts           CartProduct[]
  images          Image[]
  tag             Tag           @relation(fields: [tagId], references: [id])
  tagId           Int
  reviews         Review[]
}

model Review {
  id        Int     @id @default(autoincrement())
  rating    Int
  comment   String  @db.Text
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
}

model Tag {
  id       Int       @id @default(autoincrement())
  label    String    @unique
  image    String    @default("https://i.imgur.com/JQMqjf4.jpeg")
  products Product[]
}

model CartProduct {
  id        Int @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
}

model Order {
  id     Int         @id @default(autoincrement())
  user   User        @relation(fields: [userId], references: [id])
  userId Int         @unique
  cart   Cart        @relation(fields: [cartId], references: [id])
  cartId Int         @unique
  status OrderStatus @default(IN_PROGRESS)
}

model Image {
  id        Int     @id @default(autoincrement())
  label     String
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
}
